#
# This is free software, lisence use MIT.
# 
#=================================================
# Description: Lenovo Newifi D1 Lean's Openwrt Autobuild
# Lisence: MIT
# Author: Fuck China
# Directory: Newifi-D1
#=================================================
name: Build 

on:
  push:
    branches: 
      - master
    paths:
      - "Newifi-D1.config" 
  # schedule:
  #   - cron: 0 20 * * *
  # release:
  #   types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/host ./build_dir/host
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir

          df -h

      - name: Clone source code 
        env:
          REPO_URL: https://github.com/coolsnowwolf/lede
          REPO_BRANCH: master
          CONFIG_FILE: "Newifi-D1.config"
          CONFIG_PATH: "Newifi-D1"
        run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH $CONFIG_PATH

      - name: Update feeds
        env:
          CONFIG_FILE: "Newifi-D1.config"
          CONFIG_PATH: "Newifi-D1"
        run: |
          cd $CONFIG_PATH
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        env:
          CONFIG_FILE: "Newifi-D1.config"
          CONFIG_PATH: "Newifi-D1"
        run: |
          rm -f $CONFIG_PATH/.config*
          # 使用配置文件
          cat $CONFIG_FILE common.config > $CONFIG_PATH/.config
          cd $CONFIG_PATH
          make defconfig

      - name: Make download
        env:
          CONFIG_FILE: "Newifi-D1.config"
          CONFIG_PATH: "Newifi-D1"
        run: |
          cd $CONFIG_PATH && make download -j8
          find.$CONFIG_PATH/dl/ -size -1024c -exec rm -f {} \;
          df -h

      - name: Multi-thread compile
        env:
          CONFIG_FILE: "Newifi-D1.config"
          CONFIG_PATH: "Newifi-D1"
        run: |
          cd $CONFIG_PATH
          echo -e "$(nproc) thread compile"
          make -j$(nproc)

      - name: Single-thread compile
        env:
          CONFIG_FILE: "Newifi-D1.config"
          CONFIG_PATH: "Newifi-D1"
        if: failure()
        run: |
          cd $CONFIG_PATH
          make -j1 V=s

      - name: Compile firmware
        env:
          CONFIG_FILE: "Newifi-D1.config"
          CONFIG_PATH: "Newifi-D1"
        run: |
          #make -j$(nproc) || make -j1 V=s
          cd $CONFIG_PATH
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 $CONFIG_PATH/ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 $CONFIG_PATH/build_dir
          du -h --max-depth=1 $CONFIG_PATH/bin

      - name: Prepare artifact
        env:
          CONFIG_FILE: "Newifi-D1.config"
          CONFIG_PATH: "Newifi-D1"
        run: find $CONFIG_PATH/bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt-Newifi-D1-firmware
          path: Newifi-D1/bin/targets/
